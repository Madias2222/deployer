# Copyright (c) 2022, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---

- name: Check if openssl is already installed
  ansible.builtin.stat:
    path: "/usr/bin/openssl"
  register: openssl_installed

- name: Install openssl
  block:
    - name: Download openssl Source
      ansible.builtin.get_url:
        url: "{{ iag_openssl_url }}"
        dest: "{{ workingdir.path }}/{{ iag_openssl_url | basename }}"
        mode: "0755"
        validate_certs: false

    - name: Get openssl Source
      ansible.builtin.unarchive:
        src: "{{workingdir.path }}/{{ iag_openssl_url | basename }}"
        dest:  "{{ workingdir.path }}"
        remote_src: yes

    - name: Configure and build openssl
      ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "{{ workingdir.path }}/{{ iag_openssl_url.split('/')[-1].replace('.tar.gz', '') }}"
      with_items:
        - ./config
        - make
        - make install
  when: openssl_installed.stat.exists == False

- name: Check if Python is already installed
  ansible.builtin.stat:
    path: "/usr/local/bin/python3"
  register: python_installed

- name: Install Python
  block:
    - name: Download Python Source
      ansible.builtin.get_url:
        url: "{{ iag_python_src_url }}"
        dest: "{{ workingdir.path }}/{{ iag_python_src_url | basename }}"
        mode: "0755"

    - name: Get Python source
      ansible.builtin.unarchive:
        src: "{{workingdir.path }}/{{ iag_python_src_url | basename }}"
        dest:  "{{ workingdir.path }}"
        remote_src: yes

    # Modify many lines on the config file for the SSL settings
    - name: Modify SSL setup lines (1)
      ansible.builtin.lineinfile:
        path: "{{workingdir.path }}/Python-{{ iag_python_version }}/Modules/Setup"
        regexp: ^#SSL=/usr/local/ssl$
        line: "SSL=/usr/local/ssl"
        insertafter: ^#SSL=/usr/local/ssl$
        firstmatch: true

    - name: Modify SSL setup lines (2)
      ansible.builtin.lineinfile:
        path: "{{workingdir.path }}/Python-{{ iag_python_version }}/Modules/Setup"
        line: "_ssl _ssl.c -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl -L$(SSL)/lib -lssl -lcrypto"
        insertafter: ^SSL=/usr/local/ssl$
        firstmatch: true

    - name: Configure and install Python from source
      ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "{{ workingdir.path }}/Python-{{ iag_python_version }}"
      with_items:
        - ./configure --enable-optimizations --with-openssl=/usr/local/ssl
        - make altinstall

    - name: Add python3 symlink
      ansible.builtin.file:
        state: link
        src: /usr/local/bin/python3.9
        path: /usr/local/bin/python3

    - name: Capture python version
      ansible.builtin.command:
        cmd: /usr/local/bin/python3 -V
      register: python_installed_version

    - name: Update release file for python version
      ansible.builtin.lineinfile:
        path: "{{ itential_release_file }}"
        line: "PYTHON={{ python_installed_version.stdout}}"
        create: yes

    - name: Add pip3 symlink
      ansible.builtin.file:
         state: link
         src: /usr/local/bin/pip3.9
         path: /usr/local/bin/pip3

    - name: Capture pip version
      ansible.builtin.command:
        cmd: /usr/local/bin/pip3 -V
      register: pip_installed_version

    - name: Update release file for pip version
      ansible.builtin.lineinfile:
        path: "{{ itential_release_file }}"
        line: "PIP={{ pip_installed_version.stdout}}"
        create: yes
  when: python_installed.stat.exists == False
